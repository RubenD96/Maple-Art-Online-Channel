package client.stats

import util.packet.PacketWriter
import java.util.function.Consumer

internal object TemporaryStatOrder {

    internal val encodingOrderLocal: List<TemporaryStatType> = listOf(
        TemporaryStatType.PAD,
        TemporaryStatType.PDD,
        TemporaryStatType.MAD,
        TemporaryStatType.MDD,
        TemporaryStatType.ACC,
        TemporaryStatType.EVA,
        TemporaryStatType.CRAFT,
        TemporaryStatType.SPEED,
        TemporaryStatType.JUMP,
        TemporaryStatType.MAGIC_GUARD,
        TemporaryStatType.DARK_SIGHT,
        TemporaryStatType.BOOSTER,
        TemporaryStatType.POWER_BUARD,
        TemporaryStatType.MAX_HP,
        TemporaryStatType.MAX_MP,
        TemporaryStatType.INVINCIBLE,
        TemporaryStatType.SOUL_ARROW,
        TemporaryStatType.STUN,
        TemporaryStatType.POISON,
        TemporaryStatType.SEAL,
        TemporaryStatType.DARKNESS,
        TemporaryStatType.COMBO_COUNTER,
        TemporaryStatType.WEAPON_CHARGE,
        TemporaryStatType.DRAGON_BLOOD,
        TemporaryStatType.HOLY_SYMBOL,
        TemporaryStatType.MESO_UP,
        TemporaryStatType.SHADOW_PARTNER,
        TemporaryStatType.PICK_POCKET,
        TemporaryStatType.MESO_GUARD,
        TemporaryStatType.THAW,
        TemporaryStatType.WEAKNESS,
        TemporaryStatType.CURSE,
        TemporaryStatType.SLOW,
        TemporaryStatType.MORPH,
        TemporaryStatType.REGEN,
        TemporaryStatType.BASIC_STAT_UP,
        TemporaryStatType.STANCE,
        TemporaryStatType.SHARP_EYES,
        TemporaryStatType.MANA_REFLECTION,
        TemporaryStatType.ATTRACT,
        TemporaryStatType.SPIRIT_JAVELIN,
        TemporaryStatType.INFINITY,
        TemporaryStatType.HOLY_SHIELD,
        TemporaryStatType.HAM_STRING,
        TemporaryStatType.BLIND,
        TemporaryStatType.CONCENTRATION,
        TemporaryStatType.BAN_MAP,
        TemporaryStatType.MAX_LEVEL_BUFF,
        TemporaryStatType.MESO_UP_BY_ITEM,
        TemporaryStatType.GHOST,
        TemporaryStatType.BARRIER,
        TemporaryStatType.REVERSE_INPUT,
        TemporaryStatType.ITEM_UP_BY_ITEM,
        TemporaryStatType.RESPECT_P_IMMUNE,
        TemporaryStatType.RESPECT_M_IMMUNE,
        TemporaryStatType.DEFENSE_ATT,
        TemporaryStatType.DEFENSE_STATE,
        TemporaryStatType.INC_EFFECT_HP_POTION,
        TemporaryStatType.INC_EFFECT_MP_POTION,
        TemporaryStatType.DOJANG_BESERK,
        TemporaryStatType.DOJANG_INVINCIBLE,
        TemporaryStatType.SPARK,
        TemporaryStatType.DOJAN_SHIELD,
        TemporaryStatType.SOUL_MASTER_FINAL,
        TemporaryStatType.WIND_BREAKER_FINAL,
        TemporaryStatType.ELEMENTAL_RESET,
        TemporaryStatType.WIND_WALK,
        TemporaryStatType.EVENT_RATE,
        TemporaryStatType.COMBO_ABILITY_BUFF,
        TemporaryStatType.COMBO_DRAIN,
        TemporaryStatType.COMBO_BARRIER,
        TemporaryStatType.BODY_PRESSURE,
        TemporaryStatType.SMART_KNOCKBACK,
        TemporaryStatType.REPEAT_EFFECT,
        TemporaryStatType.EXP_BUFF_RATE,
        TemporaryStatType.STOP_PORTION,
        TemporaryStatType.STOP_MOTION,
        TemporaryStatType.FEAR,
        TemporaryStatType.EVAN_SLOW,
        TemporaryStatType.MAGIC_SHIELD,
        TemporaryStatType.MAGIC_RESISTANCE,
        TemporaryStatType.SOUL_STONE,
        TemporaryStatType.FLYING,
        TemporaryStatType.FROZEN,
        TemporaryStatType.ASSIST_CHARGE,
        TemporaryStatType.ENRAGE,
        TemporaryStatType.SUDDEN_DEATH,
        TemporaryStatType.NOT_DAMAGED,
        TemporaryStatType.FINAL_CUT,
        TemporaryStatType.THORNS_EFFECT,
        TemporaryStatType.SWALLOW_ATTACK_DAMAGE,
        TemporaryStatType.MOREWORLD_DAMAGE_UP,
        TemporaryStatType.MINE,
        TemporaryStatType.EMHP,
        TemporaryStatType.EMMP,
        TemporaryStatType.EPAD,
        TemporaryStatType.EPDD,
        TemporaryStatType.EMDD,
        TemporaryStatType.GUARD,
        TemporaryStatType.SAFETY_DAMAGE,
        TemporaryStatType.SAFETY_ABSORB,
        TemporaryStatType.CYCLONE,
        TemporaryStatType.SWALLOW_CRITICAL,
        TemporaryStatType.SWALLOW_MAX_HP,
        TemporaryStatType.SWALLOW_DEFENCE,
        TemporaryStatType.SWALLOW_EVASION,
        TemporaryStatType.CONVERSION,
        TemporaryStatType.REVIVE,
        TemporaryStatType.SNEAK,
        TemporaryStatType.MECHANIC,
        TemporaryStatType.AURA,
        TemporaryStatType.DARK_AURA,
        TemporaryStatType.BLUE_AURA,
        TemporaryStatType.YELLOW_AURA,
        TemporaryStatType.SUPER_BODY,
        TemporaryStatType.MOREWILD_MAX_HP,
        TemporaryStatType.DICE,
        TemporaryStatType.BLESSING_ARMOR,
        TemporaryStatType.DAM_R,
        TemporaryStatType.TELEPORT_MASTERY_ON,
        TemporaryStatType.COMBAT_ORDERS,
        TemporaryStatType.BEHOLDER,
        TemporaryStatType.ENERGY_CHARGED
    )

    internal val encodingOrderRemote: Map<TemporaryStatType, Consumer<Pair<TemporaryStat, PacketWriter>>> = mapOf(
        TemporaryStatType.SPEED to Consumer { it.second.write(it.first.option) },
        TemporaryStatType.COMBO_COUNTER to Consumer { it.second.write(it.first.option) },
        TemporaryStatType.WEAPON_CHARGE to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.STUN to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.DARKNESS to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.SEAL to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.WEAKNESS to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.CURSE to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.POISON to Consumer {
            it.second.writeShort(it.first.option)
            it.second.writeInt(it.first.templateId)
        },
        TemporaryStatType.SHADOW_PARTNER to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.MORPH to Consumer { it.second.writeShort(it.first.option) },
        TemporaryStatType.GHOST to Consumer { it.second.writeShort(it.first.option) },
        TemporaryStatType.ATTRACT to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.SPIRIT_JAVELIN to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.BAN_MAP to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.BARRIER to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.DOJAN_SHIELD to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.REVERSE_INPUT to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.RESPECT_P_IMMUNE to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.RESPECT_M_IMMUNE to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.DEFENSE_ATT to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.DEFENSE_STATE to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.REPEAT_EFFECT to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.STOP_PORTION to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.STOP_MOTION to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.FEAR to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.MAGIC_SHIELD to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.FROZEN to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.SUDDEN_DEATH to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.FINAL_CUT to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.CYCLONE to Consumer { it.second.write(it.first.option) },
        TemporaryStatType.MECHANIC to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.DARK_AURA to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.BLUE_AURA to Consumer { it.second.writeInt(it.first.templateId) },
        TemporaryStatType.YELLOW_AURA to Consumer { it.second.writeInt(it.first.templateId) }
    )

    internal val encodingTwoStateOrderRemote: List<TemporaryStatType> = listOf(
        TemporaryStatType.ENERGY_CHARGED,
        TemporaryStatType.DASH_SPEED,
        TemporaryStatType.DASH_JUMP,
        TemporaryStatType.RIDE_VEHICLE,
        TemporaryStatType.PARTY_BOOSTER,
        TemporaryStatType.GUIDED_BULLET,
        TemporaryStatType.UNDEAD
    )
}